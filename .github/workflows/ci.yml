on:
  push:
  pull_request:
  release:
    types: [published]

name: ci

env:
  RELEASE: ${{ github.event_name == 'release' && '--release' || '' }}
jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt-get install cargo libgtk-3-dev libhidapi-dev libusb-1.0-0-dev xvfb
    - uses: actions/checkout@v2
    - run: xvfb-run cargo test

  linux-x86_64:
    runs-on: ubuntu-latest
    steps:
    - run: sudo apt-get install cargo libgtk-3-dev libhidapi-dev libusb-1.0-0-dev
    - uses: actions/checkout@v2
    - run: cd linux && ./build.py $RELEASE
    - uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: keyboard-configurator-linux-x86_64-${{ github.sha }}
        path: linux/keyboard-configurator-x86_64.AppImage

  linux-x86_64-test:
    runs-on: ubuntu-latest
    needs: linux-x86_64
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: keyboard-configurator-linux-x86_64-${{ github.sha }}
    - run: chmod +x keyboard-configurator-x86_64.AppImage
    - run: ./keyboard-configurator-x86_64.AppImage --help-gtk

  windows-mingw32:
    runs-on: windows-latest
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        install: mingw-w64-i686-gtk3 mingw-w64-i686-toolchain mingw-w64-i686-ntldd mingw-w64-i686-imagemagick
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-i686-pc-windows-gnu
    - uses: actions/checkout@v2
    - name: Build and package
      shell: msys2 {0}
      run: cd windows && python build.py --rustup="C:/Rust/.cargo/bin/rustup.exe" $RELEASE
    - uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: keyboard-configurator-mingw32-${{ github.sha }}
        path: windows/keyboard-configurator.msi

  windows-mingw32-test:
    runs-on: windows-latest
    needs: windows-mingw32
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: keyboard-configurator-mingw32-${{ github.sha }}
    - run: msiexec /i keyboard-configurator.msi /qb
    - run: '& "C:\Program Files (x86)\System76\Keyboard Configurator\system76-keyboard-configurator.exe" --help-gtk'

  macos:
    runs-on: macos-latest
    steps:
    - run: brew install gtk+3 makeicns imagemagick jdupes
    - run: npm install -g appdmg
    - run: cd && git clone https://gitlab.gnome.org/GNOME/gtk-mac-bundler && make -C gtk-mac-bundler install
    - run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - uses: actions/checkout@v2
    - run: cd macos && ./build.py $RELEASE
    - uses: actions/upload-artifact@v2
      with:
        if-no-files-found: error
        name: keyboard-configurator-macos-${{ github.sha }}
        path: macos/keyboard-configurator.dmg

  macos-test:
    runs-on: macos-latest
    needs: macos
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: keyboard-configurator-macos-${{ github.sha }}
    - run: mkdir mnt && hdiutil attach keyboard-configurator.dmg -mountpoint $PWD/mnt
    - run: ./mnt/System76KeyboardConfigurator.app/Contents/MacOS/keyboard-configurator --help-gtk
    - run: open mnt/System76KeyboardConfigurator.app --args --help-gtk

  upload-to-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [linux-x86_64, windows-mingw32, macos]
    steps:
    - uses: actions/download-artifact@v2
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: keyboard-configurator-linux-x86_64-${{ github.sha }}/keyboard-configurator-x86_64.AppImage
        asset_name: keyboard-configurator-x86_64.AppImage
        asset_content_type: application/vnd.appimage
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: keyboard-configurator-mingw32-${{ github.sha }}/keyboard-configurator.msi
        asset_name: keyboard-configurator.msi
        asset_content_type: application/x-msi
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: keyboard-configurator-macos-${{ github.sha }}/keyboard-configurator.dmg
        asset_name: keyboard-configurator.dmg
        asset_content_type: application/x-apple-diskimage
